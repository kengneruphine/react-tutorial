{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","submitForm","handleSummit","state","initialState","this","for","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"6QAGMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,mCACA,yCAMVC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACA,4BAAQC,QAAS,kBAAKT,EAAMU,gBAAgBL,KAA5C,eAKZ,OAAO,+BAAQJ,IAcJU,EAXD,SAACX,GAAW,IACVE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBAEvB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,M,OCM3DE,E,YAvCX,WAAYZ,GAAQ,IAAD,8BACf,4CAAMA,KASVa,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBR,EADY,EACZA,KAAMS,EADM,EACNA,MAEd,EAAKC,SAAL,eACKV,EAAQS,KAdE,EAkBnBE,WAAa,WACT,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAjBnB,EAAKA,aAAe,CAChBd,KAAM,GACNC,IAAI,IAER,EAAKY,MAAQ,EAAKC,aAPH,E,sEAuBT,IAAD,EACiBC,KAAKF,MAAnBb,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,8BACA,iDACI,2BAAOe,IAAI,QAAX,QACA,2BAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOT,MAAOT,EAAMmB,SAAUJ,KAAKT,eACrE,2BAAOU,IAAI,OAAX,OACA,2BAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMT,MAAOR,EAAKkB,SAAUJ,KAAKT,eAClE,2BAAOW,KAAK,SAASR,MAAM,SAASP,QAASa,KAAKJ,kB,GAlC/CS,aCmCJC,E,2MA/BXR,MAAQ,CACJS,WAAY,I,EAIhBnB,gBAAkB,SAAAL,GAAU,IAChBwB,EAAe,EAAKT,MAApBS,WAER,EAAKZ,SAAS,CACVY,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM3B,Q,EAKzBc,aAAe,SAAAY,GACf,EAAKd,SAAS,CAACY,WAAW,GAAD,mBAAM,EAAKT,MAAMS,YAAjB,CAA6BE,O,wEAE5C,IACAF,EAAaP,KAAKF,MAAlBS,WACN,OACI,yBAAKI,UAAU,aACX,+CACC,iFACD,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,kBAAC,EAAD,CAAMS,aAAcG,KAAKH,qB,GA3BvBQ,aCClBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c297ae16.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n//creating simple component\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                <button onClick={()=> props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    })\n    return <tbody>{rows}</tbody>\n}\n\nconst Table = (props) => {\n        const { characterData, removeCharacter } = props  //getting the data\n\n        return (\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n            </table>\n        )\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component{\n    constructor(props) {\n        super(props)\n\n        this.initialState = {\n            name: '',\n            job:'',\n        }\n        this.state = this.initialState\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n        \n        this.setState({\n            [name] : value,\n    })\n    }\n\n    submitForm = () => {\n        this.props.handleSummit(this.state)\n        this.setState(this.initialState)  //clear the form after submitting\n    }\n\n    render() {\n        const { name, job } = this.state;\n\n        return (\n            <form>\n            <h5>Add New Character</h5>\n                <label for=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange} />\n                <lable for=\"job\">Job</lable>\n                <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    //creating a state object and it should contain properties of everything needed to be store in the state\n    state = {\n        characters: [\n      ],\n    }\n    \n    removeCharacter = index => {\n        const { characters } = this.state\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    handleSummit = character => {\n    this.setState({characters: [...this.state.characters, character]})\n    }\n    render() {\n      const { characters}= this.state\n        return (  // passing data to the child component(Table)\n            <div className=\"container\">\n                <h1>React Tutorial </h1>\n                 <p>Add a character with a name and a job to the table</p>\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSummit={this.handleSummit}/>\n            </div>\n        )\n    }\n}\n\nexport default App","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}